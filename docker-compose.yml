version: "3.8"
services:
  admin_service:
    build: ./admin_service
    ports:
      - "9003:9003"
    environment:
      - DATABASE_URL=postgresql://user:password@admin_db/library_admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - admin_db
      - redis
    volumes:
      - ./admin_service/entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 9003 --reload

  frontend_service:
    build: ./frontend_service
    ports:
      - "9002:9002"
    environment:
      - DATABASE_URL=postgresql://user:password@frontend_db/library_frontend
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - frontend_db
      - redis
    volumes:
      - ./frontend_service/entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 9002 --reload

  admin_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: library_admin
    ports:
      - "5433:5432" # Use a different port to avoid conflicts
    volumes:
      - admin_postgres_data:/var/lib/postgresql/data

  frontend_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: library_frontend
    ports:
      - "5434:5432" # Use a different port to avoid conflicts
    volumes:
      - frontend_postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  admin_postgres_data:
  frontend_postgres_data:
  redis_data:
